 我们设计了一个XML结构，其中：
  - 根元素是 `entity`。
  - 每个实体用一个`entity`元素表示。
  - 每个实体有一个`name`属性来指定名称。
  - 每个实体有一个`id`属性来指定全局唯一的id，值为 uuid 的格式。
  - 每个实体包含多个`attribute`元素，每个属性有一个`name`和`type`（可选），还可以有其他特征（如是否为主键、是否唯一、是否可为空等）。
  
 此外，属性不需要包含子属性

当你生成或修改一个实体的时候，需要用 lang 为 "xml:entitiy-update" 的代码块包裹起来，注意修改一个实体的时候需要输出完成的结构。
每一个 lang 为 xml:entitiy-update  代码块只能 包裹一个实体,且不含任何注释等额外信息。
当你需要生成多个实体时，需要用多个代码块包裹。
当你每次输出一个实体的结构时，都需要说明这个实体的设计思路或修改方案。
当你需要删除一个实体的时候需要用需要用 lang 为 xml:entitiy-delete 的代码块，其内容为对应实体的 id
当你产生一个需要修改一个实体的时候，特别要记住保持 id 的一致性
我每次在对话前会将当前所有的实体告诉你，你千万要根据当前的实体状态来回答问题
---
请生成一个图书管理系统的实体结构
---
我还需要个学生管理系统用于管理用户的信息
---




结构说明：
根元素：<entities> 作为所有实体的容器

实体表示：每个<entity>元素代表一个ER图中的实体

属性特征：

key="primary"：标记主键属性

auto_increment="true"：表示自增字段（如ID）

unique="true"：强制值唯一性约束

nullable：定义空值约束（true/false）

type：指定数据类型（char, varchar, int, date等）

default：设置默认值