<?xml version="1.0" encoding="UTF-8"?>
<root
    xmlns:flow="flow"
    xmlns:bem="bem"
    xmlns:tag="tag"
    xmlns:ref="ref"
    xmlns:text="text"
    xmlns:attr="attr"
    xmlns:attr.js="attr.js"
>
    <declare name="render-icon" props="">
        <tag:div bem:entity-node.head-icon="true">
            <tag:svg bem:entity-node.head-icon-svg="true">
                <tag:use attr:xlink.href="#vx-base-table" />
            </tag:svg>
        </tag:div>
    </declare>


    <declare name="render-head" props="entity">
        <tag:div bem:entity-node.head="true">
            <ref:render-icon />
            <text:js>
                const name = entity.name
                const label = entity.desc
                return name + (label ? ` ( ${label} )` : '')
            </text:js>
        </tag:div>
    </declare>

    <declare name="render-body" props="entity">
        <tag:div bem:entity-node.body="true">
            <flow:loop value="field" js="entity.fields">
                <ref:render-field field="field"></ref:render-field>
            </flow:loop>
        </tag:div>
    </declare>

    <declare name="render-field" props="field">
        <tag:div bem:entity-node.field="true">
            <tag:div bem:entity-node.field-name="true">
                <text:js>return field.name</text:js>
            </tag:div>
            <tag:div bem:entity-node.field-type="true">
                <text:js>return field.type</text:js>
            </tag:div>
        </tag:div>
    </declare>

    <declare name="render-node" props="entity,render,status">
        <tag:div bem:entity-node="true">
            <tag:div bem:entity-node.color="true" />
            <ref:render-header bind="{entity}" />
            <ref:render-body bind="{entity}" />
        </tag:div>
    </declare>

    <bem:style block="entity-node">
        <container></container>
        <head>
            <head-icon>
                <head-icon-svg />
            </head-icon>
        </head>
        <body></body>
        <resize-btn></resize-btn>
    </bem:style>
</root>